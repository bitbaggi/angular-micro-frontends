import { __decorate } from 'tslib';
import { ɵɵdefineInjectable, Injectable } from '@angular/core';
import { ApplicationInsights } from '@microsoft/applicationinsights-web';

let SharedMfe = class SharedMfe {
    constructor() {
        this.registeredMfes = new Map();
        this.setUserId = (userId) => {
            this.insights.context.user.id = userId;
            this.insights.setAuthenticatedUserContext(userId);
        };
        this.logEvent = (trackingEvent) => this.insights.trackEvent({
            name: trackingEvent.trackingEvent,
            properties: trackingEvent.properties
        });
    }
    registerMfe(name, type) {
        console.log(`Registering ${name}`);
        this.registeredMfes.set(name, type);
        console.log(`Total registered: ${this.registeredMfes.size}`);
    }
    initInsights(config) {
        this.insights = new ApplicationInsights({
            config: { instrumentationKey: config.instrumentationKey }
        });
        this.insights.loadAppInsights();
    }
};
SharedMfe.ɵprov = ɵɵdefineInjectable({ factory: function SharedMfe_Factory() { return new SharedMfe(); }, token: SharedMfe, providedIn: "platform" });
SharedMfe = __decorate([
    Injectable({ providedIn: 'platform' })
], SharedMfe);
class TrackingEvent {
}

/**
 * Generated bundle index. Do not edit.
 */

export { SharedMfe, TrackingEvent };
//# sourceMappingURL=angular-mfe-shared.js.map
