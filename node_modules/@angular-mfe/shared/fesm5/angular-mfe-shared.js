import { __decorate } from 'tslib';
import { ɵɵdefineInjectable, Injectable } from '@angular/core';
import { ApplicationInsights } from '@microsoft/applicationinsights-web';

var SharedMfe = /** @class */ (function () {
    function SharedMfe() {
        var _this = this;
        this.registeredMfes = new Map();
        this.setUserId = function (userId) {
            _this.insights.context.user.id = userId;
            _this.insights.setAuthenticatedUserContext(userId);
        };
        this.logEvent = function (trackingEvent) { return _this.insights.trackEvent({
            name: trackingEvent.trackingEvent,
            properties: trackingEvent.properties
        }); };
    }
    SharedMfe.prototype.registerMfe = function (name, type) {
        console.log("Registering " + name);
        this.registeredMfes.set(name, type);
        console.log("Total registered: " + this.registeredMfes.size);
    };
    SharedMfe.prototype.initInsights = function (config) {
        this.insights = new ApplicationInsights({
            config: { instrumentationKey: config.instrumentationKey }
        });
        this.insights.loadAppInsights();
    };
    SharedMfe.ɵprov = ɵɵdefineInjectable({ factory: function SharedMfe_Factory() { return new SharedMfe(); }, token: SharedMfe, providedIn: "platform" });
    SharedMfe = __decorate([
        Injectable({ providedIn: 'platform' })
    ], SharedMfe);
    return SharedMfe;
}());
var TrackingEvent = /** @class */ (function () {
    function TrackingEvent() {
    }
    return TrackingEvent;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { SharedMfe, TrackingEvent };
//# sourceMappingURL=angular-mfe-shared.js.map
